#!/usr/bin/perl

use strict;
use warnings;
use Data::Dumper;
use WWW::Mechanize;


my $url = $ARGV[0];
my @rootURL = $url =~/http.*\//g;
my $root = $rootURL[0];

my $m = WWW::Mechanize->new( agent => "Linux Mozilla", autocheck => 1 );
$m->get($url);
my $masterManifestContent = $m->content;
$m->success or die "Can't access $url.";



print "content is: ".Dumper $masterManifestContent;

my @Variantm3u8s = $masterManifestContent =~ /.*\.m3u8/g;

my $variantURL = $url =~ /http:.*\/\/(.*\/)/g;
my $baseVariantURL = 'http://'.$1;
print "baseVariantURL is ".Dumper $baseVariantURL;

foreach my $m3u8URL (@Variantm3u8s){
	my $m3u8 = $baseVariantURL."$m3u8URL";
	
	$m->get($m3u8);
	$m->success or die "Can't access $m3u8.";


	my @dirnames =  split('/',$m3u8 );
	my $directory = $dirnames[-2];
	mkdir $directory, 0777;

	my $filename = $m3u8 =~ /\/([^\/]*)$/;
	open FILE, '>>', './'.$directory.'/'.$1;
	print FILE $m->content; 
	close (FILE);

	my @tsFileNames = $m->content =~ /.*\.ts/g;
	my $url = $m3u8 =~ /http:.*\/\/(.*\/)/g;
	my $baseURL = 'http://'.$1;
	
	foreach my $tsFileName (@tsFileNames){
		
		
		my $tsURL = $baseURL.$tsFileName;
		print Dumper $tsURL;
		$m->get($tsURL, ':content_file'=>$tsFileName);
		
		
		
		
	}

}

#TODO
#download files to named directory
#handle VARIANT manifests with both absolute and relative ts chunk locations